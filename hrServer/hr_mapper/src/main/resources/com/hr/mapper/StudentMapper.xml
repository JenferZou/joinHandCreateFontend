<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hr.mapper.StudentMapper">
    <insert id="saveBatch">
        INSERT INTO student(sName, sMajor, sPhone, relatives, rPhone,
                            mentor, star, blood, className, sDepartment,
                            score, sno, resumeId, gender, isGraduate, mentorPhone) VALUES
        <foreach collection="list" separator="," item="item">
            (#{item.sName},#{item.sMajor},#{item.sPhone},#{item.relatives},#{item.rPhone},#{item.mentor},#{item.star}
            ,#{item.blood},#{item.className},#{item.sDepartment},#{item.score},#{item.sno},#{item.resumeId},#{item.gender},
            #{item.isGraduate},#{item.mentorPhone})
        </foreach>
    </insert>
<select id="getAllStudent" resultType="com.hr.model.Student">
    select id,sName,sMajor,sPhone,relatives,rPhone,mentor,star,blood,
           className,sDepartment,score,sno,resumeId,gender,isGraduate,mentorPhone from student
</select>
<select id="getStudentByCondition" resultType="com.hr.model.Student">
    select id,sName,sMajor,sPhone,relatives,rPhone,mentor,star,blood,
           className,sDepartment,score,sno,resumeId,gender,isGraduate ,mentorPhone from student
<where>
            <if test="sName != null and sName!='' " >
               and sName = #{sName}
            </if>
            <if test="sMajor != null and sMajor!='' " >
               and sMajor = #{sMajor}
            </if>
            <if test="sPhone != null and sPhone !='' " >
               and sPhone = #{sPhone}
            </if>
            <if test="relatives != null and relatives !='' " >
               and relatives = #{relatives}
            </if>
            <if test="rPhone != null and rPhone !='' " >
               and rPhone = #{rPhone}
            </if>
            <if test="mentor != null and mentor !='' " >
               and mentor = #{mentor}
            </if>
            <if test="star != null and star !='' " >
               and star = #{star}
            </if>
            <if test="blood != null and blood !='' " >
               and blood = #{blood}
            </if>
            <if test="className != null and className !='' " >
               and className = #{className}
            </if>
            <if test="sDepartment != null and sDepartment !='' " >
               and sDepartment = #{sDepartment}
            </if>
            <if test="score != null and score !='' " >
               and score = #{score}
            </if>
            <if test="sno != null and sno !='' " >
               and sno = #{sno}
            </if>
            <if test="resumeId != null and resumeId!='' " >
               and resumeId = #{resumeId}
            </if>
            <if test="gender != null and gender !='' " >
               and gender = #{gender}
            </if>
            <if test="isGraduate != null and isGraduate!='' " >
               and isGraduate = #{isGraduate}
            </if>
</where>
</select>
    <select id="getAllStudentByName" resultType="com.hr.model.Student">
        select id,sName,sMajor,sPhone,relatives,rPhone,mentor,star,blood,
               className,sDepartment,score,sno,resumeId,gender,isGraduate,mentorPhone from student where sName=#{name}
    </select>

    <select id="getAllStudentByClass" resultType="com.hr.model.Student">
        select id,sName,sMajor,sPhone,relatives,rPhone,mentor,star,blood,
               className,sDepartment,score,sno,resumeId,gender,isGraduate,mentorPhone from student where className=#{clazz}
    </select>

    <select id="getAllStudentByScore" resultType="com.hr.model.Student">
        select id,sName,sMajor,sPhone,relatives,rPhone,mentor,star,blood,
               className,sDepartment,score,sno,resumeId,gender,isGraduate,mentorPhone from student where score between #{minScore} and #{maxScore};
    </select>

    <select id="getStudentBySno" resultType="com.hr.model.Student">
      select id,sName,sMajor,sPhone,relatives,rPhone,mentor,star,blood,
            className,sDepartment,score,sno,resumeId,gender,isGraduate,mentorPhone,password from student where sno=#{sno} ;
    </select>



<insert id="addStudent">
    insert into student(sName,sMajor,sPhone,relatives,rPhone,mentor,star,blood,
                        className,sDepartment,score,sno,resumeId,gender,isGraduate,mentorPhone)
    values (#{sName},#{sMajor},#{sPhone},#{relatives},#{rPhone},#{mentor},#{star},#{blood},#{className}
           ,#{sDepartment},#{score},#{sno},#{resumeId},#{gender},#{isGraduate},#{mentorPhone});
</insert>


    <delete id="deleteByName">
        delete from student where sName=#{name}
    </delete>

    <delete id="deleteBySno">
        delete from student where sno=#{sno}
    </delete>
    <update id="updateStudentByPrimaryKey" parameterType="com.hr.model.Student" >
        update student
        <set >
            <if test="sName != null" >
                sName = #{sName},
            </if>
            <if test="sMajor != null" >
                sMajor = #{sMajor},
            </if>
            <if test="sPhone != null" >
                sPhone = #{sPhone},
            </if>
            <if test="relatives != null" >
                relatives = #{relatives},
            </if>
            <if test="rPhone != null" >
                rPhone = #{rPhone},
            </if>
            <if test="mentor != null" >
                mentor = #{mentor},
            </if>
            <if test="star != null" >
                star = #{star},
            </if>
            <if test="blood != null" >
                blood = #{blood},
            </if>
            <if test="className != null" >
                className = #{className},
            </if>
            <if test="sDepartment != null" >
                sDepartment = #{sDepartment},
            </if>
            <if test="score != null" >
                score = #{score},
            </if>
            <if test="sno != null" >
                sno = #{sno},
            </if>
            <if test="resumeId != null" >
                resumeId = #{resumeId},
            </if>
            <if test="gender != null" >
                gender = #{gender},
            </if>
            <if test="isGraduate != null" >
                isGraduate = #{isGraduate},
            </if>
            <if test="mentorPhone != null" >
                mentorPhone = #{mentorPhone},
        </if>
        </set>
        where sno = #{sno} and sName=#{sName}
    </update>



</mapper>